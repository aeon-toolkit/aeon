gha_enabled: True
branch: "main"
blocked_dirs: [".github/"]
draft: False
description: "aeon-toolkit/aeon is a Python project for machine learning algorithms using time series data. Write code that adheres to PEP8 and is formatted to the Black code style. The projects documentation is built using Sphinx and MyST, and unit testing is done using pytest."

docs:
  scikit-learn: ["https://scikit-learn.org/stable/", "We use the scikit-learn framework for our machine learning algorithms."]
  sklearn: ["https://scikit-learn.org/stable/", "We use the scikit-learn framework for our machine learning algorithms."]
  numpy: ["https://numpy.org/doc/stable/", "We use numpy as a data container and for mathematical operations."]
  scipy: ["https://docs.scipy.org/doc/scipy/", "We use scipy for mathematical operations and algorithms."]
  pandas: ["https://pandas.pydata.org/docs/", "We use pandas as a data container and for data manipulation."]
  numba: ["https://numba.readthedocs.io/en/stable/", "We use numba to speed up functions where possible."]
  sphinx: ["https://www.sphinx-doc.org/en/master/", "We use sphinx to generate our documentation."]
  myst: ["https://myst-parser.readthedocs.io/en/stable/", "We use myst to write our documentation in markdown."]
  pytest: ["https://docs.pytest.org/en/stable/", "We use pytest for unit testing."]

sandbox:
  install:
    - pre-commit install
  check:
    - pre-commit run --files {file_path}

rules:
  - "Comments should be instructive, such as inline and docstring comments. Remove any code that has been commented out."
  - "Any clearly inefficient or redundant code can be optimized or refactored. Any improvements should not change the functionality of the code."
  - "All public classes and functions should have a `numpydoc` style docstring. This should include a description of the class or function, the parameters, the class attributes or function return values, and a usage example for the class or function."
  - "Update the relevant API page in `docs/api_reference/` when new public functions and classes are added and not included in the API documentation. For example, if a new function is added to `aeon/distances/`, a `sphinx.ext.autosummary` link should also be added to `docs/api_reference/distances.rst`. New sections in the page should not be created for individual functions and classes, add it to the most relevant existing one. Only add functions and classes which are not already in the relevant API page and avoid duplicate entries."
