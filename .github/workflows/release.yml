name: Release

on:
  release:
    types:
      - published

jobs:
  check_manifest:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: check-manifest --hook-stage manual

  build_wheels:
    needs: check_manifest
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build project
        run: |
          python -m pip install build
          python -m build

      - name: Store build files
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*

  test_unix_wheels:
    needs: build_wheels
    name: Test wheels on ${{ matrix.os }} with ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04, macOS-12]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Get wheel filename
        run: echo "WHEELNAME=$(ls ./dist/aeon-*none-any.whl)" >> $GITHUB_ENV

      - name: Install wheel and extras
        run: python -m pip install "${{ env.WHEELNAME }}[all_extras,dev]"

      - name: Run tests
        run: make test

  test_windows_wheels:
    needs: build_wheels
    name: Test wheels on ${{ matrix.os }} with ${{ matrix.python-version }}
    runs-on: windows-2022
    strategy:
      matrix:
        include:
          # Window 64 bit
          - os: windows-2022
            python: 38
            python-version: '3.8'
            bitness: 64
            platform_id: win_amd64
          - os: windows-2022
            python: 39
            python-version: '3.9'
            bitness: 64
            platform_id: win_amd64
          - os: windows-2022
            python: 310
            python-version: '3.10'
            bitness: 64
            platform_id: win_amd64
          - os: windows-2022
            python: 311
            python-version: '3.11'
            bitness: 64
            platform_id: win_amd64

    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: anaconda, conda-forge,

      - run: conda --version
      - run: which python

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Install conda libpython
        run: conda install -c anaconda -n test -y libpython

      - name: Display downloaded artifacts
        run: ls -l dist

      - name: Get wheel filename
        run: echo "WHEELNAME=$(ls ./dist/aeon-*none-any.whl)" >> $env:GITHUB_ENV

      - name: Activate conda env
        run: conda activate test

      - name: Install wheel and extras
        run: python -m pip install "${env:WHEELNAME}[all_extras,dev]"

      - name: Show conda packages
        run: conda list -n test

      - name: Run tests
        run: |
          mkdir -p testdir/
          cp .coveragerc testdir/
          cp setup.cfg testdir/
          python -m pytest

  upload_wheels:
    runs-on: ubuntu-latest
    needs: [build_wheels,test_unix_wheels,test_windows_wheels]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
