name: PR Opened
on:
  pull_request:
    branches:
      - main
    #types: opened

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  # based on the scikit-learn 1.3.1 PR labelers
  labeler:
    runs-on: ubuntu-22.04

    outputs:
      title-labels: ${{ steps.label-pr.outputs.title-labels }}
      title-labels-new: ${{ steps.label-pr.outputs.title-labels-new }}
      content-labels: ${{ steps.label-pr.outputs.content-labels }}
      content-labels-new: ${{ steps.label-pr.outputs.content-labels-new }}
      content-labels-status: ${{ steps.label-pr.outputs.content-labels-status }}
      present-content-labels: ${{ steps.label-pr.outputs.present-content-labels }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install PyGithub
        run: pip install -Uq PyGithub

      - name: Label pull request
        id: label-pr
        run: python build_tools/pr_labeler.py
        env:
          CONTEXT_GITHUB: ${{ toJson(github) }}

  comment:
    needs: labeler
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - run: echo "${{needs.labeler.outputs.title-labels}} + ${{needs.labeler.outputs.title-labels-new}} + ${{needs.labeler.outputs.content-labels}} + ${{needs.labeler.outputs.content-labels-new}} + ${{needs.labeler.outputs.content-labels-status}} + ${{needs.labeler.outputs.present-content-labels}}"

      - name: Install PyGithub
        run: pip install -Uq PyGithub

      - name: Write pull request comment
        run: python build_tools/pr_open_commenter.py
        env:
          CONTEXT_GITHUB: ${{ toJson(github) }}

#      - name: Install dependencies
#        run: python -m pip install requests
#
#      - name: Process Comments
#        id: process-comments
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          PR_NUMBER: ${{ github.event.pull_request.number }}
#          BRANCH_SHA: ${{ github.event.pull_request.head.sha }}
#          RUN_ID: ${{ github.run_id }}
#          LOG_FILE: linting_output.txt
#          VERSIONS_FILE: versions.txt
#        run: python ./build_tools/get_comment.py
