name: PR Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - uses: tj-actions/changed-files@v35.9.0
        id: changed-files

      - name: List changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'

      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --files ${{ steps.changed-files.outputs.all_changed_files }}

      - name: Check for missing init files
        run: build_tools/fail_on_missing_init_files.sh
        shell: bash

  run-notebook-examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[all_extras,binder,dev]

      - name: Run example notebooks
        run: build_tools/run_examples.sh
        shell: bash

  test-nosoftdeps:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install aeon and dependencies
        run: |
          python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: |
          python -m pytest -k 'test_all_estimators' --matrixdesign True --pyargs aeon.registry
          python -m pytest -k 'test_check_estimator_does_not_raise' --matrixdesign True --pyargs aeon.utils
          python -m pytest --matrixdesign True --pyargs aeon.tests.test_softdeps

  test-nosoftdeps-full:
    needs: test-nosoftdeps
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install aeon and dependencies
        run: |
          python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: python -m pytest -k 'not TestAll' --matrixdesign True --ignore=aeon/utils/tests/test_mlflow_aeon_model_export.py

  test-windows:
    needs: test-nosoftdeps
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: anaconda, conda-forge,

      - run: conda --version
      - run: which python

      - name: Fix windows paths
        if: ${{ runner.os == 'Windows' }}
        run: echo "C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install conda libpython
        run: conda install -c anaconda libpython

      - name: Install aeon and dependencies
        run: python -m pip install .[all_extras,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: python -m pytest --matrixdesign True

  test-unix:
    needs: test-nosoftdeps
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ubuntu-20.04, macOS-11]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install aeon and dependencies
        run: |
          python -m pip install .[all_extras,dev] --no-cache-dir

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: python -m pytest --matrixdesign True

      - name: Publish code coverage
        uses: codecov/codecov-action@v3
