name: PR pytest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "aeon/**"
      - ".github/workflows/**"
      - "pyproject.toml"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test-nosoftdeps:
    runs-on: ubuntu-22.04

    env:
      NUMBA_CACHE_DIR: ${{ github.workspace }}/.numba_cache
      NUMBA_CPU_NAME: generic
      NUMBA_CPU_FEATURES: +64bit +adx +aes +avx +avx2 -avx512bf16 -avx512bitalg -avx512bw -avx512cd -avx512dq -avx512er -avx512f -avx512ifma -avx512pf -avx512vbmi -avx512vbmi2 -avx512vl -avx512vnni -avx512vpopcntdq +bmi +bmi2 -cldemote -clflushopt -clwb -clzero +cmov +cx16 +cx8 -enqcmd +f16c +fma -fma4 +fsgsbase +fxsr -gfni +invpcid -lwp +lzcnt +mmx +movbe -movdir64b -movdiri -mwaitx +pclmul -pconfig -pku +popcnt -prefetchwt1 +prfchw -ptwrite -rdpid +rdrnd +rdseed +rtm +sahf -sgx -sha -shstk +sse +sse2 +sse3 +sse4.1 +sse4.2 -sse4a +ssse3 -tbm -vaes -vpclmulqdq -waitpkg -wbnoinvd -xop +xsave -xsavec +xsaveopt -xsaves
      CICD_RUNNING: 1

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.10"

      - name: Cache invalidation date
        id: daily-date
        run: echo "name=date::$(date +'%Y-%m-%d' --date=@$(( $(date +%s) / (3 * 24 * 60 * 60) * (3 * 24 * 60 * 60) )))" >> $GITHUB_OUTPUT
        shell: bash

      # Python environment cache
      - uses: actions/cache@v3
        name: Numba cache
        id: cache
        with:
          path: ${{ github.workspace }}/.numba_cache
          key: ${{ runner.os }}-pip-numba-3.10-no-soft-dep-${{ hashFiles('pyproject.toml') }}-${{ steps.daily-date.outputs.date }}

      - name: Install aeon and dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: |
          python -m pytest -k 'test_all_estimators' --pyargs aeon.registry
          python -m pytest -k 'test_check_estimator_does_not_raise' --pyargs aeon.utils
          python -m pytest --pyargs aeon.testing.test_softdeps

  test-nosoftdeps-full:
    needs: test-nosoftdeps
    runs-on: ubuntu-22.04

    env:
      NUMBA_CACHE_DIR: ${{ github.workspace }}/.numba_cache
      NUMBA_CPU_NAME: generic
      NUMBA_CPU_FEATURES: +64bit +adx +aes +avx +avx2 -avx512bf16 -avx512bitalg -avx512bw -avx512cd -avx512dq -avx512er -avx512f -avx512ifma -avx512pf -avx512vbmi -avx512vbmi2 -avx512vl -avx512vnni -avx512vpopcntdq +bmi +bmi2 -cldemote -clflushopt -clwb -clzero +cmov +cx16 +cx8 -enqcmd +f16c +fma -fma4 +fsgsbase +fxsr -gfni +invpcid -lwp +lzcnt +mmx +movbe -movdir64b -movdiri -mwaitx +pclmul -pconfig -pku +popcnt -prefetchwt1 +prfchw -ptwrite -rdpid +rdrnd +rdseed +rtm +sahf -sgx -sha -shstk +sse +sse2 +sse3 +sse4.1 +sse4.2 -sse4a +ssse3 -tbm -vaes -vpclmulqdq -waitpkg -wbnoinvd -xop +xsave -xsavec +xsaveopt -xsaves
      CICD_RUNNING: 1

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache invalidation date
        id: daily-date
        run: echo "name=date::$(date +'%Y-%m-%d' --date=@$(( $(date +%s) / (3 * 24 * 60 * 60) * (3 * 24 * 60 * 60) )))" >> $GITHUB_OUTPUT
        shell: bash

      # Numba cache
      - uses: actions/cache@v3
        name: Numba cache
        id: cache
        with:
          path: .${{ github.workspace }}/numba_cache
          key: ${{ runner.os }}-pip-numba-3.10-no-soft-deps-${{ hashFiles('pyproject.toml') }}-${{ steps.daily-date.outputs.date }}

      - name: Install aeon and dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: python -m pytest -k 'not TestAll' --ignore=aeon/utils/tests/test_mlflow_aeon_model_export.py --prtesting ${{ github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'full pytest actions') }}

  pytest:
    needs: test-nosoftdeps
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macOS-12, windows-2022 ]
        python-version: [ "3.8", "3.10", "3.12" ]

    env:
      NUMBA_CACHE_DIR: ${{ github.workspace }}/.numba_cache
      NUMBA_CPU_NAME: generic
      NUMBA_CPU_FEATURES: +64bit +adx +aes +avx +avx2 -avx512bf16 -avx512bitalg -avx512bw -avx512cd -avx512dq -avx512er -avx512f -avx512ifma -avx512pf -avx512vbmi -avx512vbmi2 -avx512vl -avx512vnni -avx512vpopcntdq +bmi +bmi2 -cldemote -clflushopt -clwb -clzero +cmov +cx16 +cx8 -enqcmd +f16c +fma -fma4 +fsgsbase +fxsr -gfni +invpcid -lwp +lzcnt +mmx +movbe -movdir64b -movdiri -mwaitx +pclmul -pconfig -pku +popcnt -prefetchwt1 +prfchw -ptwrite -rdpid +rdrnd +rdseed +rtm +sahf -sgx -sha -shstk +sse +sse2 +sse3 +sse4.1 +sse4.2 -sse4a +ssse3 -tbm -vaes -vpclmulqdq -waitpkg -wbnoinvd -xop +xsave -xsavec +xsaveopt -xsaves
      CICD_RUNNING: 1

    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # On Windows, GNU tar is much faster than the default BSD tar
      - name: "Use GNU tar instead BSD tar"
        if: ${{ runner.os == 'Windows' }}
        shell: cmd
        run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

      - name: Cache invalidation date
        id: daily-date
        run: echo "name=date::$(date +'%Y-%m-%d' --date=@$(( $(date +%s) / (3 * 24 * 60 * 60) * (3 * 24 * 60 * 60) )))" >> $GITHUB_OUTPUT
        shell: bash

      - name: Restore Python Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ github.workspace }}/.numba_cache
          key: ${{ runner.os }}-numba-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ steps.daily-date.outputs.date }}

      - name: Install aeon and dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install .[all_extras,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        # run the full test suit if a PR has the 'full pytest actions' label
        run: python -m pytest --prtesting ${{ github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'full pytest actions') }}

  codecov:
    # run the code coverage job if a PR has the 'codecov actions' label
    if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'codecov actions') }}

    needs: test-nosoftdeps
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Disable Numba JIT
        run: echo "NUMBA_DISABLE_JIT=1" >> $GITHUB_ENV

      - name: Install aeon and dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install .[all_extras,unstable_extras,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: python -m pytest --cov=aeon --cov-report=xml  --timeout 1800

      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
