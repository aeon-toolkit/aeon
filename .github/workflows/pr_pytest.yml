name: PR pytest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "aeon/**"
      - ".github/workflows/**"
      - "pyproject.toml"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test-nosoftdeps:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.10"

      - uses: ./.github/actions/numba_cache
        with:
          cache_name: "test-no-softdeps"
          runner_os: ${{ runner.os }}
          write_new_cache: "false"

      - name: Install aeon and dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: |
          python -m pytest -k 'test_all_estimators' --pyargs aeon.registry
          python -m pytest -k 'test_check_estimator_does_not_raise' --pyargs aeon.utils
          python -m pytest --pyargs aeon.testing.test_softdeps

  test-nosoftdeps-full:
    needs: test-nosoftdeps
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: ./.github/actions/numba_cache
        with:
          cache_name: "test-no-softdeps-full"
          runner_os: ${{ runner.os }}
          write_new_cache: "false"

      - name: Install aeon and dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: python -m pytest -k 'not TestAll' --ignore=aeon/utils/tests/test_mlflow_aeon_model_export.py --prtesting ${{ github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'full pytest actions') }}

  pytest:
    needs: test-nosoftdeps
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macOS-12, windows-2022 ]
        python-version: [ "3.8", "3.10", "3.12" ]

    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: ./.github/actions/numba_cache
        with:
          cache_name: "pytest-${{ runner.os }}"
          runner_os: ${{ runner.os }}
          write_new_cache: "false"

      - name: Install aeon and dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install .[all_extras,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        # run the full test suit if a PR has the 'full pytest actions' label
        run: python -m pytest --prtesting ${{ github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'full pytest actions') }}

  codecov:
    # run the code coverage job if a PR has the 'codecov actions' label
    if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'codecov actions') }}

    needs: test-nosoftdeps
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Disable Numba JIT
        run: echo "NUMBA_DISABLE_JIT=1" >> $GITHUB_ENV

      - name: Install aeon and dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: python -m pip install .[all_extras,unstable_extras,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: python -m pytest --cov=aeon --cov-report=xml  --timeout 1800

      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
