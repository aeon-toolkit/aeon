name: PR pytest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "aeon/**"
      - ".github/workflows/**"
      - "pyproject.toml"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test-nosoftdeps:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: "3.10"

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-3.10-nosoftdep-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.10-nosoftdep-

      - name: Install aeon and dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

#      - name: Run tests
#        run: |
#          python -m pytest -k 'test_all_estimators' --pyargs aeon.registry
#          python -m pytest -k 'test_check_estimator_does_not_raise' --pyargs aeon.utils
#          python -m pytest --pyargs aeon.tests.test_softdeps

  test-nosoftdeps-full:
    needs: test-nosoftdeps
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-3.10-nosoftdep-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.10-nosoftdep-

      - name: Install aeon and dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

#      - name: Run tests
#        run: python -m pytest -k 'not TestAll' --ignore=aeon/utils/tests/test_mlflow_aeon_model_export.py --prtesting ${{ github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'full pytest actions') }}

  pytest:
    needs: test-nosoftdeps
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
#        os: [ ubuntu-latest, macOS-latest, windows-latest ]
#        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
        os: [ ubuntu-latest ]
        python-version: [ "3.10" ]

    env:
      NUMBA_CACHE_DIR: ${{ github.workspace }}/.numba_cache
      NUMBA_CPU_NAME: generic
#      NUMBA_CPU_FEATURES: "+64bit,+adx,+aes,+avx,+avx2,...(continue with the rest of the features)..."
      NUMBA_DEBUG_CACHE: 1

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # On Windows, GNU tar is much faster than the default BSD tar
      - name: "Use GNU tar instead BSD tar"
        if: ${{ runner.os == 'Windows' }}
        shell: cmd
        run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.pythonLocation }}
            .numba_cache
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

#      - name: Setup Environment Consistency
#        run: |
#          echo "NUMBA_CPU_NAME=generic" >> $GITHUB_ENV
#          echo "NUMBA_CPU_FEATURES=+64bit,+adx,+aes,+avx,+avx2,...(rest of your features)..." >> $GITHUB_ENV

      - name: Install aeon and dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m pip install .[all_extras,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Show numba cache env
        run: echo $NUMBA_CACHE_DIR

      - name: Create and show numba cache before
        run: |
          mkdir -p $NUMBA_CACHE_DIR
          ls -l $NUMBA_CACHE_DIR

      - name: Run tests with increased verbosity
        run: python -m pytest -vv aeon/distances/

#      - name: Run tests
        # run the full test suit if a PR has the 'full pytest actions' label
#        run: python -m pytest -k 'not TestAll' --ignore=aeon/utils/tests/test_mlflow_aeon_model_export.py --prtesting ${{ github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'full pytest actions') }}

      - name: Run tests with increased verbosity
        run: python -m pytest -vv aeon/distances/

      - name: Show numba cache after
        run: ls -l $NUMBA_CACHE_DIR


  codecov:
    # run the code coverage job if a PR has the 'codecov actions' label
    if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'codecov actions') }}

    needs: test-nosoftdeps
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Disable Numba JIT
        run: echo "NUMBA_DISABLE_JIT=1" >> $GITHUB_ENV

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-3.10-codecov-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.10-codecov-

      - name: Install aeon and dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m pip install .[all_extras,unstable_extras,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: python -m pytest --cov=aeon --cov-report=xml

      - uses: codecov/codecov-action@v3
