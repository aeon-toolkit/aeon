[build-system]
requires = ["setuptools>61", "wheel", "toml", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "aeon"
version = "1.2.0"
description = "A toolkit for machine learning from time series"
authors = [
    {name = "aeon developers", email = "contact@aeon-toolkit.org"},
]
maintainers = [
    {name = "aeon developers", email = "contact@aeon-toolkit.org"},
]
readme = "README.md"
keywords = [
    "data-science",
    "machine-learning",
    "data-mining",
    "time-series",
    "scikit-learn",
    "forecasting",
    "time-series-analysis",
    "time-series-classification",
    "time-series-clustering",
    "time-series-regression",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Development Status :: 5 - Production/Stable",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.10,<3.14"
dependencies = [
    "deprecated>=1.2.13",
    "numba>=0.55,<0.62.0",
    "numpy>=1.21.0,<2.3.0",
    "packaging>=20.0",
    "pandas>=2.0.0,<2.4.0",
    "scikit-learn>=1.0.0,<1.7.0",
    "scipy>=1.9.0,<1.16.0",
    "typing-extensions>=4.6.0",
]

# soft dependencies
[project.optional-dependencies]
all_extras = [
    "esig>=1.0.0; platform_system != 'Darwin'",
    "imbalanced-learn",
    "matplotlib>=3.3.2",
    "pycatch22>=0.4.5",
    "pyod>=1.1.3",
    "pydot>=2.0.0",
    "ruptures>=1.1.9",
    "seaborn>=0.11.0",
    "sparse",
    "statsmodels>=0.12.1",
    "stumpy>=1.5.1",
    "tensorflow>=2.14; python_version < '3.13'",
    "keras>=3.6.0; python_version < '3.13'",
    "torch>=1.13.1",
    "tsfresh>=0.20.0",
    "tslearn>=0.5.2",
]
dl = [
    "tensorflow>=2.14; python_version < '3.13'",
    "keras>=3.6.0; python_version < '3.13'",
]
unstable_extras = [
    # requires gcc and fftw to be installed for Windows and some other OS (see http://www.fftw.org/index.html)
    "mrsqm>=0.0.7,<0.1.0; platform_system != 'Windows' and python_version < '3.12'",
    "mrseql>=0.0.4,<0.1.0; platform_system != 'Windows' and python_version < '3.12'",
]

# development dependencies
dev = [
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-doctestplus",
    "pytest-mock",
    "pytest-randomly",
    "pytest-remotedata",
    "pytest-rerunfailures",
    "pytest-timeout",
    "pytest-xdist[psutil]",
]
binder = [
    "notebook",
    "jupyterlab",
]
docs = [
    "sphinx<8.3.0",
    "sphinx-design",
    "sphinx-version-warning",
    "sphinx_issues",
    "sphinx-copybutton",
    "sphinxext-opengraph",
    "nbsphinx",
    "numpydoc",
    "myst-parser",
    "jupyter",
    "furo",
    "tabulate",
    "matplotlib",
]

[project.urls]
Homepage = "https://www.aeon-toolkit.org"
Repository = "https://github.com/aeon-toolkit/aeon"
Documentation = "https://www.aeon-toolkit.org"
Changelog = "https://www.aeon-toolkit.org/en/stable/changelog.html"
Download = "https://pypi.org/project/aeon/#files"
API = "https://www.aeon-toolkit.org/en/stable/api_reference.html"

[project.license]
file = "LICENSE"

[tool.setuptools]
zip-safe = true

[tool.setuptools.package-data]
aeon = [
    "*.csv",
    "*.csv.gz",
    "*.arff",
    "*.arff.gz",
    "*.txt",
    "*.ts",
    "*.tsv",
]

[tool.setuptools.packages.find]
exclude = ["tests", "tests.*"]

[tool.check-manifest]
ignore = [
    # Ignore virtual environments in local builds
    "venv/**",
    # Ignore the docs symlink and its contents
    "docs/examples",
    "docs/examples/**",
]

[tool.ruff.lint]
select = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
mypy_path = "aeon/"

[tool.pytest.ini_options]
testpaths = "aeon"
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "ELLIPSIS",
    "FLOAT_CMP",
]
addopts = [
    "--durations=20",
    "--timeout=600",
    "--showlocals",
    "--dist=worksteal",
    "--reruns=3",
    "--reruns-delay=3",
    "--rerun-except=Error",
    "--rerun-except=Exception",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore:numpy.dtype size changed",
    "ignore:numpy.ufunc size changed",
]
